NAME: 江畑 拓哉 ID:201611350
# Problem 1:
ある点 A から B へのコストの情報を持つ edge という構造体を作ります。これにそれぞれの地点のコストの情報を持つ widgets という配列と、edge を持つ edges という配列を用意します。edge の情報は与えられるので、その入力を edges に保存し、widgets に反映していきます。widgets の要素にあるコストが減少できたならば時間を逆行できるということを示します。これをすべての要素について検証し、最後までコストが減少できたならば possible であり、そうでなければ not possible です。

# Problem 2:
自分が通ることが出来る道と教授が通ることの出来る道を別々の配列に読み込みます。また逆行出来る道については既に道がある場合にはコストが小さい方に更新します。次にダイクストラ法を用いて最短経路を探索します。

# Problem 3:
ある点 A から B へのコストの情報を持つ Edge という構造体と、現在の探索時にある地点における残っている燃料や合計コストを示す Node という構造体を作ります。
すべての入力を保存できたら実際に開始地点からシミュレーションを行います。燃料が購入できる場合には追加で燃料を購入し、別の地点へ行ける場合には別の地点へ行きます。これらで求められるすべてを一旦集合中に保存し、その集合に入っている最小の値を次のシミュレートの開始地点とします。また同じ地点を繰り返し評価することがないように、既に求まっているコストがあればそれと現在のシミュレートで求まったコストを比較し、後者が大きければそこでそのシミュレートは打ち切ります。シミュレート中に取り出した情報が終点にたどり着いていたならば、常に考えうる最小のコストを用いて計算していることから、その値が開始地点から終点へ向かう最小のコストです。
