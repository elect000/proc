NAME: 江畑 拓哉 ID:201611350
# Problem 1:
ある木の枝が n であるとき (n >= 2)、 その左側と右側に生える木のノードの合計は n - 1 になっています。この性質を利用して、右の木としてノード数 n - 1 - i、左の木としてノード数 i (0 <= i <= n - 1) の、想定されうるすべての木の可能性をかけ合わせることで木の形の数を数えることが出来ます。

# Problem 2:
取りうる得点の点数分だけの長さの配列を、振るダイスの回数分だけ用意し dt とします。
n 回ダイスを投げ終えた時の合計点数が k 点であるとすると、次に投げた時の点数は k + 1, k + 2 , ... , k + 6 点であることから、それぞれを n + 1 回目のパターンとして n 回ダイスを振って k が出た回数分だけ加算していきます。
つまり、 dt[n + 1][k + i] = dt[n + 1][k + i] + dt[n][k] (1 <= i <= 6) です。
これを繰り返し、n 回ダイスを投げた場合のすべての場合の数で割ることで n 回ダイス を投げたときに k 点 が出る確率を求めることが出来ます。
求められているのは k 点以上の確率なので、k 以上の 値が出た場合をすべて加算し、同様に割ることで答えを得ることが出来ます。

# Problem 3:
Golomb sequence の反復式に従って計算し、求まるそれぞれの値を配列 a に入れます。
入力に対して、それを超えないように a の要素を頭から順番に加算していき入力を超えない最大の数になったらそのインデックスを答えとします。
